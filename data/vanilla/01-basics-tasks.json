[
  {
    "name": "Personal Info Card",
    "statement": "Create variables to store your name, age, and whether you’re a student (true/false). Print a message to the console using these values.",
    "solution": [
      "import { differenceInYears } from \"https://cdn.skypack.dev/date-fns/differenceInYears.mjs\";\n\nconst firstName = \"Valeriy\"\nconst age = differenceInYears(new Date(), new Date(\"1970-02-22\"));\nlet isStudent = false;\n\nconsole.log(\n  `My name is ${firstName}, ${age} years old, my student status is \"${isStudent}\"`\n);",
      "qewrqwer"
    ]
  },
  {
    "name": "Task 3: Accordion",
    "statement": "Create accordion",
    "solution": [
      "<!-- html -->\n    <div class=\"accordion\">\n      <div class=\"accordion-item\">\n        <div class=\"accordion-header\">Section 1</div>\n        <div class=\"accordion-content\">\n          <p>This is a content of section 1</p>\n        </div>\n      </div>\n      <div class=\"accordion-item\">\n        <div class=\"accordion-header\">Section 2</div>\n        <div class=\"accordion-content\">\n          <p>This is a content of section 2</p>\n        </div>\n      </div>\n      <div class=\"accordion-item\">\n        <div class=\"accordion-header\">Section 3</div>\n        <div class=\"accordion-content\">\n          <p>This is a content of section 3</p>\n        </div>\n      </div>\n    </div>\n\n/* css */\n.accordion {\n  width: 300px;\n}\n.accordion-item {\n  margin-bottom: 5px;\n}\n.accordion-header {\n  background-color: blue;\n  padding: 10px;\n  cursor: pointer;\n  font-weight: bold;\n  color: wheat;\n}\n.accordion-content {\n  display: none;\n  max-height: 1000px;\n  transition: max-height 0.6s ease;\n  padding: 10px;\n  overflow: hidden;\n  color: rgb(21, 112, 108);\n  background-color: lightblue;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.accordion-content.active {\n  display: block;\n  max-height: 1000px;\n}\n\n// JS\nconst accordionHeaders = document.querySelectorAll(\".accordion-header\");\nconst accordionContents = document.querySelectorAll(\".accordion-content\");\n\naccordionHeaders.forEach((header) => {\n  header.addEventListener(\"click\", () => {\n    const accordionItem = header.parentElement;\n    const accordionContent = accordionItem.querySelector(\".accordion-content\");\n\n    accordionContents.forEach((content) => {\n      if (content !== accordionContent) {\n        content.classList.remove(\"active\");\n        content.style.maxHeight = \"0\";\n      }\n    });\n\n    accordionContent.classList.toggle(\"active\");\n\n    if (accordionContent.classList.contains(\"active\")) {\n      accordionContent.style.maxHeight = accordionContent.scrollHeight + \"px\";\n    } else {\n      accordionContent.style.maxHeight = \"0\";\n    }\n  });\n});"
    ]
  },
  {
    "name": "Task 4: Modal Window",
    "statement": "Create modal window",
    "solution": [
      "HTML:\n      <button class=\"open-btn\" id=\"openModal\">Send solution</button>\n      <div class=\"modal-overlay\" id=\"backdrop\">\n        <div class=\"modal\">\n          <button class=\"close-btn\" id=\"closeModal\">×</button>\n          <p>Це модальне вікно</p>\n        </div>\n      </div>\n\nCSS:\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n}\n.modal {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  position: relative;\n  min-width: 300px;\n}\n.close-btn {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n}\n.modal-overlay.active {\n  opacity: 1;\n  visibility: visible;\n}\n\nJS:\nconst openModalBtn = document.getElementById(\"openModal\");\nconst closeModalBtn = document.getElementById(\"closeModal\");\nconst backdrop = document.getElementById(\"backdrop\");\n\nfunction openModal() {\n  backdrop.classList.add(\"active\");\n}\nfunction closeModal() {\n  backdrop.classList.remove(\"active\");\n}\nopenModalBtn.addEventListener(\"click\", openModal);\ncloseModalBtn.addEventListener(\"click\", closeModal);\nbackdrop.addEventListener(\"click\", (e) => {\n  if (e.target === backdrop) {\n    closeModal();\n  }\n});\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.key === \"Escape\") {\n    closeModal();\n  }\n});",
      "console.log(\"Test\")",
      "console.log(\"Test 2\")"
    ]
  },
  {
    "name": "Type Checker",
    "statement": "Create variables of each primitive type (string, number, boolean, undefined, null). Use typeof to print the type of each.",
    "solution": [
      "const number = 8;\nconst string = \"Hello Cake\";\nconst isMorning = true;\nlet find;\nconst value = null;\n\nconsole.log(\n  typeof number,\n  typeof string,\n  typeof isMorning,\n  typeof find,\n  typeof value\n);"
    ]
  },
  {
    "name": "Price Calculator",
    "statement": "Create two number variables: price and quantity. Multiply them to find the total cost. Store the result in a third variable and log it.",
    "solution": [
      "const price = 34;\nconst quantity = 4;\nconst totalCost = price * quantity;\n\nconsole.log(totalCost);"
    ]
  }
]